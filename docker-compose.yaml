version: '2.4'
services:
  app:
    build: .
    depends_on:
    - netbox
    - redis
    volumes:
    - ./nine-dhcp2.docker.conf.yaml:/app/nine-dhcp2.conf.yaml:ro
    # Uncomment for fast development
    #- ./nine-dhcp2-linux:/app/nine-dhcp2:ro
#    networks:
#    - default
#    - dhcp
    cap_add:
    - NET_RAW

  # support services
  netbox: &netbox
    image: ninech/netbox:v2.4.3
    depends_on:
    - postgres
    - redis
    - netbox-worker
    env_file: netbox.env
    volumes:
    #    - ./startup_scripts:/opt/netbox/startup_scripts:ro
    #    - ./initializers:/opt/netbox/initializers:ro
    - netbox-nginx-config:/etc/netbox-nginx/
    - netbox-static-files:/opt/netbox/netbox/static
    - netbox-media-files:/opt/netbox/netbox/media
    - netbox-report-files:/etc/netbox/reports:ro
  netbox-worker:
    <<: *netbox
    depends_on:
    - redis
    entrypoint:
    - python3
    - /opt/netbox/netbox/manage.py
    command:
    - rqworker
#    networks:
#    - default
  nginx:
    command: nginx -c /etc/netbox-nginx/nginx.conf
    image: nginx:1.15-alpine
    depends_on:
    - netbox
    labels:
      # https://github.com/ninech/reception
      reception.main: 'true'
      reception.http_port: '8080'
    ports:
#    - 8080:8080
    - 8080
    volumes:
    - netbox-static-files:/opt/netbox/netbox/static:ro
    - netbox-nginx-config:/etc/netbox-nginx/:ro
  postgres:
    image: postgres:10.4-alpine
    env_file: postgres.env
    volumes:
    - netbox-postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:4-alpine
    ports:
    - 6379:6379
    command:
    - redis-server
    - --appendonly
    - 'yes'
    volumes:
    - netbox-redis-data:/data

  # test container
  dhclient: &dhclient
    build:
      context: .
      dockerfile: dhclient.Dockerfile
    command:
    - dhclient
    - -d
    - -i
    - eth0
    cap_add:
    - NET_ADMIN
    - NET_RAW
    - NET_BROADCAST
#    networks:
#    - dhcp
  dhcpcd:
    <<: *dhclient
    command:
    - dhcpcd
    - --version
#networks:
#  dhcp:
#    internal: true
#    enable_ipv6: true
#    ipam:
#      driver: bridge
#      config:
#      - subnet: 172.29.0.0/16
#      - subnet: fd9e:0366:0282::/8
volumes:
  netbox-static-files:
    driver: local
  netbox-nginx-config:
    driver: local
  netbox-media-files:
    driver: local
  netbox-report-files:
    driver: local
  netbox-postgres-data:
    driver: local
  netbox-redis-data:
    driver: local
